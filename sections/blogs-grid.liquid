<style>
  .tag-filter-container {
    margin-bottom: 20px;
  }
  #tag-filter-buttons {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    margin-bottom: 16px;
  }
  .filter-btn {
    padding: 8px 16px;
    border: 2px solid #e2e8f0;
    background: #fff;
    border-radius: 6px;
    cursor: pointer;
    font-size: 14px;
    transition: all 0.2s ease;
  }
  .filter-btn:hover {
    border-color: #3b82f6;
    background: #f8fafc;
  }
  .filter-btn.active {
    background: #3b82f6;
    color: #fff;
    border-color: #3b82f6;
  }
  #pagination {
    display: flex;
    gap: 8px;
    margin-top: 20px;
  }
  #pagination a {
    padding: 8px 12px;
    border: 1px solid #d1d5db;
    text-decoration: none;
    border-radius: 4px;
    transition: all 0.2s ease;
  }
  #pagination a:hover {
    background: #f3f4f6;
  }
  @media (min-width: 768px) {
    #top-grid .as-featured {
      grid-column: 1;
      grid-row: span 3;
    }
    #top-grid .as-right {
      grid-column: 2;
    }
  }
</style>

<section id="{{ section.id }}">
  {%- assign articles_per_page = 7 -%}

  <div class="tag-filter-container">
    <div id="tag-filter-buttons">
      <button class="filter-btn active" data-tag="">All</button>
      {%- assign all_tags = '' -%}
      {%- for article in blog.articles -%}
        {%- for tag in article.tags -%}
          {%- assign tag_lc = tag | downcase -%}
          {%- unless all_tags contains tag_lc -%}
            <button class="filter-btn" data-tag="{{ tag_lc | escape }}">{{ tag }}</button>
            {%- assign all_tags = all_tags | append: ',' | append: tag_lc -%}
          {%- endunless -%}
        {%- endfor -%}
      {%- endfor -%}
    </div>
  </div>

  <ul id="article-source" style="display:none">
    {%- for article in blog.articles -%}
      <li class="article-item" data-tags="{{ article.tags | join: ',' | downcase }}">
        <a href="{{ article.url }}">{{ article.title }}</a>
        {%- if article.tags.size > 0 -%}
          <span>
            â€”
            {%- for tag in article.tags -%}
              {{ tag }}
              {%- unless forloop.last %}, {% endunless -%}
            {%- endfor -%}
          </span>
        {%- endif -%}
      </li>
    {%- endfor -%}
  </ul>

  <div class="space-y-4">
    <ul id="top-grid" class="grid gap-4 md:grid-cols-2"></ul>
    <ul id="bottom-grid" class="grid gap-4 md:grid-cols-3"></ul>
  </div>

  <div id="pagination"></div>
  <div id="no-articles" style="display:none"><p>No articles found for the selected filter.</p></div>
</section>

<script>
  (() => {
    const perPage = {{ articles_per_page }};
    const allItems = Array.from(document.querySelectorAll('#article-source .article-item'));
    const pagination = document.getElementById('pagination');
    const filterButtons = document.querySelectorAll('.filter-btn');
    const noArticlesMsg = document.getElementById('no-articles');
    const topGrid = document.getElementById('top-grid');
    const bottomGrid = document.getElementById('bottom-grid');

    let filteredItems = [...allItems];
    let currentPage = 1;
    let totalPages = 1;

    const clearGrids = () => { topGrid.innerHTML = ''; bottomGrid.innerHTML = ''; };

    const reorderForLayout = (list) => {
      clearGrids();
      list.forEach((item, i) => {
        item.classList.remove('as-featured','as-right');
        if (i === 0) { item.classList.add('as-featured'); topGrid.appendChild(item); }
        else if (i >= 1 && i <= 3) { item.classList.add('as-right'); topGrid.appendChild(item); }
        else if (i >= 4 && i <= 6) { bottomGrid.appendChild(item); }
      });
    };

    const addPageLink = (text, page, active) => {
      const a = document.createElement('a');
      a.href = '#';
      a.textContent = text;
      if (active) a.style.fontWeight = 'bold';
      a.addEventListener('click', (e) => { e.preventDefault(); showPage(page); });
      pagination.appendChild(a);
    };

    const renderPagination = () => {
      pagination.innerHTML = '';
      totalPages = Math.ceil(filteredItems.length / perPage) || 1;
      if (totalPages > 1) {
        if (currentPage > 1) addPageLink('Previous', currentPage - 1, false);
        for (let i = 1; i <= totalPages; i++) addPageLink(String(i), i, i === currentPage);
        if (currentPage < totalPages) addPageLink('Next', currentPage + 1, false);
      }
    };

    const showPage = (page) => {
      currentPage = Math.min(Math.max(1, page), totalPages);
      const start = (currentPage - 1) * perPage;
      const pageItems = filteredItems.slice(start, start + perPage);
      reorderForLayout(pageItems);
      renderPagination();
    };

    const filterArticles = (tag) => {
      filteredItems = tag
        ? allItems.filter((el) => el.dataset.tags.split(',').map(t => t.trim()).includes(tag))
        : [...allItems];

      if (!filteredItems.length) {
        clearGrids();
        pagination.innerHTML = '';
        noArticlesMsg.style.display = 'block';
        return;
      }

      noArticlesMsg.style.display = 'none';
      showPage(1);
    };

    const updateActiveButton = (btn) => {
      filterButtons.forEach(b => b.classList.remove('active'));
      btn.classList.add('active');
    };

    filterButtons.forEach((btn) => {
      btn.addEventListener('click', (e) => {
        e.preventDefault();
        updateActiveButton(btn);
        const tag = btn.dataset.tag.toLowerCase().trim();
        filterArticles(tag);
      });
    });

    filterArticles('');
  })();
</script>

{% schema %}
{
  "name": "Simple Blog List",
  "settings": [],
  "presets": [{ "name": "Simple Blog List" }]
}
{% endschema %}
